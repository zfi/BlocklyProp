/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables.records;


import com.parallax.server.blocklyprop.db.generated.tables.FriendRequestEmail;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FriendRequestEmailRecord extends UpdatableRecordImpl<FriendRequestEmailRecord> implements Record8<Long, Long, Long, String, Timestamp, Integer, Timestamp, Boolean> {

    private static final long serialVersionUID = -1071544140;

    /**
     * Setter for <code>blocklyprop.friend_request_email.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.idRequestUser</code>.
     */
    public void setIdrequestuser(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.idRequestUser</code>.
     */
    public Long getIdrequestuser() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.email</code>.
     */
    public void setEmail(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.email</code>.
     */
    public Long getEmail() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.accept_Key</code>.
     */
    public void setAcceptKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.accept_Key</code>.
     */
    public String getAcceptKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.requested</code>.
     */
    public void setRequested(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.requested</code>.
     */
    public Timestamp getRequested() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.request_sent_count</code>.
     */
    public void setRequestSentCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.request_sent_count</code>.
     */
    public Integer getRequestSentCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.request_last_sent</code>.
     */
    public void setRequestLastSent(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.request_last_sent</code>.
     */
    public Timestamp getRequestLastSent() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>blocklyprop.friend_request_email.refused</code>.
     */
    public void setRefused(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>blocklyprop.friend_request_email.refused</code>.
     */
    public Boolean getRefused() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Long, String, Timestamp, Integer, Timestamp, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Long, String, Timestamp, Integer, Timestamp, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.IDREQUESTUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.ACCEPT_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.REQUESTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.REQUEST_SENT_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.REQUEST_LAST_SENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return FriendRequestEmail.FRIEND_REQUEST_EMAIL.REFUSED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getIdrequestuser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAcceptKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getRequested();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getRequestSentCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getRequestLastSent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getRefused();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getIdrequestuser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAcceptKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getRequested();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getRequestSentCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getRequestLastSent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getRefused();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value2(Long value) {
        setIdrequestuser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value3(Long value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value4(String value) {
        setAcceptKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value5(Timestamp value) {
        setRequested(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value6(Integer value) {
        setRequestSentCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value7(Timestamp value) {
        setRequestLastSent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord value8(Boolean value) {
        setRefused(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FriendRequestEmailRecord values(Long value1, Long value2, Long value3, String value4, Timestamp value5, Integer value6, Timestamp value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FriendRequestEmailRecord
     */
    public FriendRequestEmailRecord() {
        super(FriendRequestEmail.FRIEND_REQUEST_EMAIL);
    }

    /**
     * Create a detached, initialised FriendRequestEmailRecord
     */
    public FriendRequestEmailRecord(Long id, Long idrequestuser, Long email, String acceptKey, Timestamp requested, Integer requestSentCount, Timestamp requestLastSent, Boolean refused) {
        super(FriendRequestEmail.FRIEND_REQUEST_EMAIL);

        set(0, id);
        set(1, idrequestuser);
        set(2, email);
        set(3, acceptKey);
        set(4, requested);
        set(5, requestSentCount);
        set(6, requestLastSent);
        set(7, refused);
    }
}
