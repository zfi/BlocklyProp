/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables;


import com.parallax.server.blocklyprop.db.generated.Blocklyprop;
import com.parallax.server.blocklyprop.db.generated.tables.records.ProjectTagRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectTag extends TableImpl<ProjectTagRecord> {

    private static final long serialVersionUID = 1489533587;

    /**
     * The reference instance of <code>blocklyprop.project_tag</code>
     */
    public static final ProjectTag PROJECT_TAG = new ProjectTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjectTagRecord> getRecordType() {
        return ProjectTagRecord.class;
    }

    /**
     * The column <code>blocklyprop.project_tag.id_project</code>.
     */
    public final TableField<ProjectTagRecord, Long> ID_PROJECT = createField("id_project", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>blocklyprop.project_tag.id_tag</code>.
     */
    public final TableField<ProjectTagRecord, Long> ID_TAG = createField("id_tag", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>blocklyprop.project_tag</code> table reference
     */
    public ProjectTag() {
        this(DSL.name("project_tag"), null);
    }

    /**
     * Create an aliased <code>blocklyprop.project_tag</code> table reference
     */
    public ProjectTag(String alias) {
        this(DSL.name(alias), PROJECT_TAG);
    }

    /**
     * Create an aliased <code>blocklyprop.project_tag</code> table reference
     */
    public ProjectTag(Name alias) {
        this(alias, PROJECT_TAG);
    }

    private ProjectTag(Name alias, Table<ProjectTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjectTag(Name alias, Table<ProjectTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Blocklyprop.BLOCKLYPROP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTag as(String alias) {
        return new ProjectTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectTag as(Name alias) {
        return new ProjectTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjectTag rename(String name) {
        return new ProjectTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjectTag rename(Name name) {
        return new ProjectTag(name, null);
    }
}
