/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables.pojos;


import com.parallax.server.blocklyprop.db.enums.ProjectType;

import java.io.Serializable;
import java.util.GregorianCalendar;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Project implements Serializable {

    private static final long serialVersionUID = -1341600227;

    private Long              id;
    private Long              idUser;
    private Long              idClouduser;
    private String            name;
    private String            description;
    private String            descriptionHtml;
    private String            code;
    private Short             codeBlockVersion;
    private ProjectType       type;
    private String            board;
    private Boolean           private_;
    private Boolean           shared;
    private GregorianCalendar created;
    private GregorianCalendar modified;
    private Long              basedOn;
    private String            settings;

    public Project() {}

    public Project(Project value) {
        this.id = value.id;
        this.idUser = value.idUser;
        this.idClouduser = value.idClouduser;
        this.name = value.name;
        this.description = value.description;
        this.descriptionHtml = value.descriptionHtml;
        this.code = value.code;
        this.codeBlockVersion = value.codeBlockVersion;
        this.type = value.type;
        this.board = value.board;
        this.private_ = value.private_;
        this.shared = value.shared;
        this.created = value.created;
        this.modified = value.modified;
        this.basedOn = value.basedOn;
        this.settings = value.settings;
    }

    public Project(
        Long              id,
        Long              idUser,
        Long              idClouduser,
        String            name,
        String            description,
        String            descriptionHtml,
        String            code,
        Short             codeBlockVersion,
        ProjectType       type,
        String            board,
        Boolean           private_,
        Boolean           shared,
        GregorianCalendar created,
        GregorianCalendar modified,
        Long              basedOn,
        String            settings
    ) {
        this.id = id;
        this.idUser = idUser;
        this.idClouduser = idClouduser;
        this.name = name;
        this.description = description;
        this.descriptionHtml = descriptionHtml;
        this.code = code;
        this.codeBlockVersion = codeBlockVersion;
        this.type = type;
        this.board = board;
        this.private_ = private_;
        this.shared = shared;
        this.created = created;
        this.modified = modified;
        this.basedOn = basedOn;
        this.settings = settings;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getIdUser() {
        return this.idUser;
    }

    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }

    public Long getIdClouduser() {
        return this.idClouduser;
    }

    public void setIdClouduser(Long idClouduser) {
        this.idClouduser = idClouduser;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescriptionHtml() {
        return this.descriptionHtml;
    }

    public void setDescriptionHtml(String descriptionHtml) {
        this.descriptionHtml = descriptionHtml;
    }

    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public Short getCodeBlockVersion() {
        return this.codeBlockVersion;
    }

    public void setCodeBlockVersion(Short codeBlockVersion) {
        this.codeBlockVersion = codeBlockVersion;
    }

    public ProjectType getType() {
        return this.type;
    }

    public void setType(ProjectType type) {
        this.type = type;
    }

    public String getBoard() {
        return this.board;
    }

    public void setBoard(String board) {
        this.board = board;
    }

    public Boolean getPrivate() {
        return this.private_;
    }

    public void setPrivate(Boolean private_) {
        this.private_ = private_;
    }

    public Boolean getShared() {
        return this.shared;
    }

    public void setShared(Boolean shared) {
        this.shared = shared;
    }

    public GregorianCalendar getCreated() {
        return this.created;
    }

    public void setCreated(GregorianCalendar created) {
        this.created = created;
    }

    public GregorianCalendar getModified() {
        return this.modified;
    }

    public void setModified(GregorianCalendar modified) {
        this.modified = modified;
    }

    public Long getBasedOn() {
        return this.basedOn;
    }

    public void setBasedOn(Long basedOn) {
        this.basedOn = basedOn;
    }

    public String getSettings() {
        return this.settings;
    }

    public void setSettings(String settings) {
        this.settings = settings;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Project (");

        sb.append(id);
        sb.append(", ").append(idUser);
        sb.append(", ").append(idClouduser);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(descriptionHtml);
        sb.append(", ").append(code);
        sb.append(", ").append(codeBlockVersion);
        sb.append(", ").append(type);
        sb.append(", ").append(board);
        sb.append(", ").append(private_);
        sb.append(", ").append(shared);
        sb.append(", ").append(created);
        sb.append(", ").append(modified);
        sb.append(", ").append(basedOn);
        sb.append(", ").append(settings);

        sb.append(")");
        return sb.toString();
    }
}
