/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables.records;


import com.parallax.server.blocklyprop.db.generated.tables.Admin;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminRecord extends UpdatableRecordImpl<AdminRecord> implements Record5<Long, Integer, String, String, Timestamp> {

    private static final long serialVersionUID = 1032508639;

    /**
     * Setter for <code>blocklyprop.admin.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>blocklyprop.admin.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>blocklyprop.admin.db_version</code>.
     */
    public void setDbVersion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>blocklyprop.admin.db_version</code>.
     */
    public Integer getDbVersion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>blocklyprop.admin.db_script</code>.
     */
    public void setDbScript(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>blocklyprop.admin.db_script</code>.
     */
    public String getDbScript() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blocklyprop.admin.notes</code>.
     */
    public void setNotes(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>blocklyprop.admin.notes</code>.
     */
    public String getNotes() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blocklyprop.admin.last_change_date</code>.
     */
    public void setLastChangeDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>blocklyprop.admin.last_change_date</code>.
     */
    public Timestamp getLastChangeDate() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Integer, String, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Integer, String, String, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Admin.ADMIN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Admin.ADMIN.DB_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Admin.ADMIN.DB_SCRIPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Admin.ADMIN.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Admin.ADMIN.LAST_CHANGE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDbVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDbScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getLastChangeDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDbVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDbScript();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastChangeDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord value2(Integer value) {
        setDbVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord value3(String value) {
        setDbScript(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord value4(String value) {
        setNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord value5(Timestamp value) {
        setLastChangeDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminRecord values(Long value1, Integer value2, String value3, String value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminRecord
     */
    public AdminRecord() {
        super(Admin.ADMIN);
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(Long id, Integer dbVersion, String dbScript, String notes, Timestamp lastChangeDate) {
        super(Admin.ADMIN);

        set(0, id);
        set(1, dbVersion);
        set(2, dbScript);
        set(3, notes);
        set(4, lastChangeDate);
    }
}
