/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables.records;


import com.parallax.server.blocklyprop.db.enums.ProjectType;
import com.parallax.server.blocklyprop.db.generated.tables.Project;

import java.util.GregorianCalendar;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record16<Long, Long, Long, String, String, String, String, Short, ProjectType, String, Boolean, Boolean, GregorianCalendar, GregorianCalendar, Long, String> {

    private static final long serialVersionUID = -1183374399;

    /**
     * Setter for <code>blocklyprop.project.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>blocklyprop.project.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>blocklyprop.project.id_user</code>.
     */
    public void setIdUser(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>blocklyprop.project.id_user</code>.
     */
    public Long getIdUser() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>blocklyprop.project.id_clouduser</code>.
     */
    public void setIdClouduser(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>blocklyprop.project.id_clouduser</code>.
     */
    public Long getIdClouduser() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>blocklyprop.project.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>blocklyprop.project.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>blocklyprop.project.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>blocklyprop.project.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>blocklyprop.project.description_html</code>.
     */
    public void setDescriptionHtml(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>blocklyprop.project.description_html</code>.
     */
    public String getDescriptionHtml() {
        return (String) get(5);
    }

    /**
     * Setter for <code>blocklyprop.project.code</code>.
     */
    public void setCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>blocklyprop.project.code</code>.
     */
    public String getCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>blocklyprop.project.code_block_version</code>.
     */
    public void setCodeBlockVersion(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>blocklyprop.project.code_block_version</code>.
     */
    public Short getCodeBlockVersion() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>blocklyprop.project.type</code>.
     */
    public void setType(ProjectType value) {
        set(8, value);
    }

    /**
     * Getter for <code>blocklyprop.project.type</code>.
     */
    public ProjectType getType() {
        return (ProjectType) get(8);
    }

    /**
     * Setter for <code>blocklyprop.project.board</code>.
     */
    public void setBoard(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>blocklyprop.project.board</code>.
     */
    public String getBoard() {
        return (String) get(9);
    }

    /**
     * Setter for <code>blocklyprop.project.private</code>.
     */
    public void setPrivate(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>blocklyprop.project.private</code>.
     */
    public Boolean getPrivate() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>blocklyprop.project.shared</code>.
     */
    public void setShared(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>blocklyprop.project.shared</code>.
     */
    public Boolean getShared() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>blocklyprop.project.created</code>.
     */
    public void setCreated(GregorianCalendar value) {
        set(12, value);
    }

    /**
     * Getter for <code>blocklyprop.project.created</code>.
     */
    public GregorianCalendar getCreated() {
        return (GregorianCalendar) get(12);
    }

    /**
     * Setter for <code>blocklyprop.project.modified</code>.
     */
    public void setModified(GregorianCalendar value) {
        set(13, value);
    }

    /**
     * Getter for <code>blocklyprop.project.modified</code>.
     */
    public GregorianCalendar getModified() {
        return (GregorianCalendar) get(13);
    }

    /**
     * Setter for <code>blocklyprop.project.based_on</code>.
     */
    public void setBasedOn(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>blocklyprop.project.based_on</code>.
     */
    public Long getBasedOn() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>blocklyprop.project.settings</code>.
     */
    public void setSettings(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>blocklyprop.project.settings</code>.
     */
    public String getSettings() {
        return (String) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Long, Long, Long, String, String, String, String, Short, ProjectType, String, Boolean, Boolean, GregorianCalendar, GregorianCalendar, Long, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Long, Long, Long, String, String, String, String, Short, ProjectType, String, Boolean, Boolean, GregorianCalendar, GregorianCalendar, Long, String> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Project.PROJECT.ID_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Project.PROJECT.ID_CLOUDUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Project.PROJECT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Project.PROJECT.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Project.PROJECT.DESCRIPTION_HTML;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Project.PROJECT.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Project.PROJECT.CODE_BLOCK_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectType> field9() {
        return Project.PROJECT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Project.PROJECT.BOARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return Project.PROJECT.PRIVATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return Project.PROJECT.SHARED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<GregorianCalendar> field13() {
        return Project.PROJECT.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<GregorianCalendar> field14() {
        return Project.PROJECT.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field15() {
        return Project.PROJECT.BASED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return Project.PROJECT.SETTINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getIdClouduser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDescriptionHtml();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component8() {
        return getCodeBlockVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectType component9() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getBoard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getPrivate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component12() {
        return getShared();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GregorianCalendar component13() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GregorianCalendar component14() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component15() {
        return getBasedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getSettings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getIdClouduser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDescriptionHtml();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getCodeBlockVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectType value9() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getBoard();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getPrivate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getShared();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GregorianCalendar value13() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GregorianCalendar value14() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value15() {
        return getBasedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getSettings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(Long value) {
        setIdUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(Long value) {
        setIdClouduser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(String value) {
        setDescriptionHtml(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(Short value) {
        setCodeBlockVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value9(ProjectType value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value10(String value) {
        setBoard(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value11(Boolean value) {
        setPrivate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value12(Boolean value) {
        setShared(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value13(GregorianCalendar value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value14(GregorianCalendar value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value15(Long value) {
        setBasedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value16(String value) {
        setSettings(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(Long value1, Long value2, Long value3, String value4, String value5, String value6, String value7, Short value8, ProjectType value9, String value10, Boolean value11, Boolean value12, GregorianCalendar value13, GregorianCalendar value14, Long value15, String value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Long id, Long idUser, Long idClouduser, String name, String description, String descriptionHtml, String code, Short codeBlockVersion, ProjectType type, String board, Boolean private_, Boolean shared, GregorianCalendar created, GregorianCalendar modified, Long basedOn, String settings) {
        super(Project.PROJECT);

        set(0, id);
        set(1, idUser);
        set(2, idClouduser);
        set(3, name);
        set(4, description);
        set(5, descriptionHtml);
        set(6, code);
        set(7, codeBlockVersion);
        set(8, type);
        set(9, board);
        set(10, private_);
        set(11, shared);
        set(12, created);
        set(13, modified);
        set(14, basedOn);
        set(15, settings);
    }
}
