/*
 * This file is generated by jOOQ.
*/
package com.parallax.server.blocklyprop.db.generated.tables.records;


import com.parallax.server.blocklyprop.db.generated.tables.ProjectSharing;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectSharingRecord extends UpdatableRecordImpl<ProjectSharingRecord> implements Record6<Long, Long, String, Boolean, Boolean, Timestamp> {

    private static final long serialVersionUID = 1853160863;

    /**
     * Setter for <code>blocklyprop.project_sharing.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>blocklyprop.project_sharing.id_project</code>.
     */
    public void setIdProject(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.id_project</code>.
     */
    public Long getIdProject() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>blocklyprop.project_sharing.sharekey</code>.
     */
    public void setSharekey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.sharekey</code>.
     */
    public String getSharekey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>blocklyprop.project_sharing.active</code>.
     */
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>blocklyprop.project_sharing.expires</code>.
     */
    public void setExpires(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.expires</code>.
     */
    public Boolean getExpires() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>blocklyprop.project_sharing.exprire_date</code>.
     */
    public void setExprireDate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>blocklyprop.project_sharing.exprire_date</code>.
     */
    public Timestamp getExprireDate() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, Boolean, Boolean, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, Boolean, Boolean, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProjectSharing.PROJECT_SHARING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ProjectSharing.PROJECT_SHARING.ID_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ProjectSharing.PROJECT_SHARING.SHAREKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return ProjectSharing.PROJECT_SHARING.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return ProjectSharing.PROJECT_SHARING.EXPIRES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return ProjectSharing.PROJECT_SHARING.EXPRIRE_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getIdProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSharekey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getExpires();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getExprireDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getIdProject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSharekey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getExpires();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getExprireDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value2(Long value) {
        setIdProject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value3(String value) {
        setSharekey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value4(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value5(Boolean value) {
        setExpires(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord value6(Timestamp value) {
        setExprireDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectSharingRecord values(Long value1, Long value2, String value3, Boolean value4, Boolean value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectSharingRecord
     */
    public ProjectSharingRecord() {
        super(ProjectSharing.PROJECT_SHARING);
    }

    /**
     * Create a detached, initialised ProjectSharingRecord
     */
    public ProjectSharingRecord(Long id, Long idProject, String sharekey, Boolean active, Boolean expires, Timestamp exprireDate) {
        super(ProjectSharing.PROJECT_SHARING);

        set(0, id);
        set(1, idProject);
        set(2, sharekey);
        set(3, active);
        set(4, expires);
        set(5, exprireDate);
    }
}
